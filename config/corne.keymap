/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    macros {
        pipe: pipe {
            compatible = "zmk,behavior-macro";
            label = "PIPE";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT &kp NUBS>,
                <&macro_release>,
                <&kp NUBS &kp RALT>;
        };
        tilde: tilde {
            compatible = "zmk,behavior-macro";
            label = "TILDE";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT &kp RIGHT_BRACKET>,
                <&macro_release>,
                <&kp RIGHT_BRACKET &kp RALT>;
        };
        zwei: zwei {
            compatible = "zmk,behavior-macro";
            label = "ZWEI";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT &kp MINUS>,
                <&macro_release>,
                <&kp MINUS &kp RALT>;
        };
        drei: drei {
            compatible = "zmk,behavior-macro";
            label = "DREI";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT &kp NUMBER_7>,
                <&macro_release>,
                <&kp NUMBER_7 &kp RALT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp TAB  &kp Q  &kp W      &kp E  &kp R      &kp T      &kp Y  &kp U      &kp I    &kp O     &kp P       &kp ESCAPE
 &kp LALT  &kp A  &kp S      &kp D  &kp F      &kp G      &kp H  &kp J      &kp K    &kp L  &kp SEMI    &kp BACKSPACE
&kp LSHFT  &kp Z  &kp X      &kp C  &kp V      &kp B      &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &kp LCTRL  &mo 2  &kp SPACE    &kp RET  &mo 1  &kp LCTRL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
   &kp TAB         &none         &none         &none         &none         &none    &kp HOME     &none     &none    &kp END   &none   &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT  &trans  &trans
 &kp LSHFT        &trans        &trans        &trans        &trans        &trans      &trans    &trans    &trans     &trans  &trans  &trans
                                            &kp LGUI         &mo 3     &kp SPACE     &kp RET     &none  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB      &kp MINUS   &kp QUESTION     &none   &none        &kp GRAVE             &kp EXCL        &none                 &none   &kp RPAR         &kp CARET  &kp BSPC
&kp LCTRL          &zwei  &kp AMPERSAND     &drei  &trans  &kp RIGHT_BRACE         &kp KP_MINUS    &kp ASTRK  &kp LEFT_PARENTHESIS  &kp SLASH  &kp GREATER_THAN     &none
&kp LSHFT  &kp BACKSLASH     &kp DOLLAR     &pipe  &tilde         &kp PLUS    &kp RIGHT_BRACKET  &kp PERCENT                &kp AT   &kp PIPE     &kp LESS_THAN     &none
                                         &kp LGUI  &trans        &kp SPACE              &kp RET        &mo 3              &kp RALT
            >;
        };

        layer_4 {
            bindings = <
&trans  &kp LA(NUMBER_1)        &trans        &trans        &trans        &trans          &trans        &trans        &trans        &trans        &trans  &trans
&trans            &kp N1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans
&trans            &trans        &trans        &trans        &trans        &trans          &trans        &trans        &trans        &trans        &trans  &trans
                                              &trans        &trans        &trans          &trans        &trans        &trans
            >;
        };
    };
};
